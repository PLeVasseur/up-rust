diff -ruN protoc-bin-vendored-linux-aarch_64_original/Android.bp protoc-bin-vendored-linux-aarch_64/Android.bp
--- protoc-bin-vendored-linux-aarch_64_original/Android.bp	2024-02-04 09:15:50.671062145 -0500
+++ protoc-bin-vendored-linux-aarch_64/Android.bp	2024-02-04 09:10:08.689621000 -0500
@@ -2,9 +2,8 @@
 // Do not modify this file as changes will be overridden on upgrade.
 
 // TODO: Add license.
-rust_library {
+rust_library_host {
 name: "libprotoc_bin_vendored_linux_aarch_64",
-host_supported: true,
 crate_name: "protoc_bin_vendored_linux_aarch_64",
 cargo_env_compat: true,
 cargo_pkg_version: "3.0.0",
diff -ruN protoc-bin-vendored-linux-aarch_64_original/src/lib.rs protoc-bin-vendored-linux-aarch_64/src/lib.rs
--- protoc-bin-vendored-linux-aarch_64_original/src/lib.rs	2024-02-04 09:16:23.066820266 -0500
+++ protoc-bin-vendored-linux-aarch_64/src/lib.rs	2024-02-04 08:40:43.282663000 -0500
@@ -1,11 +1,16 @@
 // @generated by update-bin.sh
+use std::env;
 use std::path::Path;
 use std::path::PathBuf;
 
-fn cargo_manifest_dir() -> &'static Path {
-    Path::new(env!("CARGO_MANIFEST_DIR"))
+fn cargo_manifest_dir() -> PathBuf {
+    PathBuf::from(env::var("CARGO_MANIFEST_DIR").expect("CARGO_MANIFEST_DIR environment variable not set"))
 }
 
+// fn cargo_manifest_dir() -> &'static Path {
+//     Path::new(env!("CARGO_MANIFEST_DIR"))
+// }
+
 pub fn include_path() -> PathBuf {
     let include_path = cargo_manifest_dir().join("include");
     assert!(include_path.is_dir());
